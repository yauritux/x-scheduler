<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
        
	<context:property-placeholder
		location="file:///${X_CONF_DIR}/db.properties"
		properties-ref="applicationDefaultProperties" 
		ignore-resource-not-found="true"
		ignore-unresolvable="true" />

	<util:properties 
		location="file:///${X_CONF_DIR}/db.properties"
		id="xSchedulerCacheProperties" />

	<import resource="classpath*:gdn-jpa-configuration.xml" />

	<jpa:repositories base-package="com.gdn.x.scheduler.dao" />

	<context:component-scan base-package="com.gdn.x.scheduler" />

	<bean id="dataProviderClient" class="com.gdn.geneva.data.provider.client.DataProviderClient">
		<constructor-arg ref="clientConfiguration" />
	</bean>

	<bean id="clientConfiguration" class="com.gdn.geneva.data.provider.client.ClientConfiguration">
		<constructor-arg value="${geneva.uri.location}" />
	</bean>
	
	<!-- Scheduler Bean for Quartz --> 
	<bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" scope="singleton"> 
	<!-- <bean id="schedulerFactory" class="com.gdn.x.scheduler.service.helper.schedengine.AutoRegisteringSchedulerFactoryBean" scope="singleton"> -->
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.jobStore.class">org.quartz.simpl.RAMJobStore</prop>
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">20</prop>
			</props>
		</property>
		<property name="schedulerName" value="cronScheduler"/>		
		<property name="autoStartup" value="true"/>
	</bean>
	
	<!-- Task Executor Thread -->
	<bean id="taskExecutorThread" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5"/>
		<property name="maxPoolSize" value="10"/>
		<property name="waitForTasksToCompleteOnShutdown" value="true"/>
	</bean>
	
	<!-- sample -->
	<!-- 
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5"/>
		<property name="maxPoolSize" value="10"/>
		<property name="waitForTasksToCompleteOnShutdown" value="true"/>
	</bean>
	
	<bean name="complexJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.gdn.x.scheduler.service.WSJob"/> 
		<property name="jobDataMap">
			<map>
			    <entry key="commandQueryService" value-ref="commandQueryService"/>
				<entry key="taskCommandService" value-ref="taskCommandService"/>
				<entry key="taskExecutionCommandService" value-ref="taskExecutionCommandService"/>
				<entry key="taskQueryService" value-ref="taskQueryService"/>
				<entry key="taskExecutionQueryService" value-ref="taskExecutionQueryService" />
				<entry key="taskExecutorObject" value-ref="taskExecutor" />
			</map>
		</property>
		<property name="durability" value="true"/>
    </bean>
    
    <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
    	<property name="jobDetail" ref="complexJobDetail"/>
    	<property name="startDelay" value="1000"/>
    	<property name="repeatInterval" value="8000"/>
    </bean>
    
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.jobStore.class">org.quartz.simpl.RAMJobStore</prop>
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">20</prop>
			</props>
		</property>
		<property name="schedulerName" value="xScheduler"/>		
		<property name="autoStartup" value="true"/>
    
    	<property name="jobDetails">
    		<list>
    			<ref bean="complexJobDetail"/>
    		</list>
    	</property>
    	<property name="triggers">
    		<list>
    			<ref bean="simpleTrigger"/>
    		</list>
    	</property>
    </bean>
    -->
    <!-- sample -->
    
    
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.smtp.host}" />
		<property name="port" value="${mail.smtp.port}" />
		<property name="username" value="${mail.username}" />
		<property name="password" value="${mail.password}" />
	</bean>

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</value>
		</property>
	</bean>


</beans>
